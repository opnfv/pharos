{
  "comments": [
    {
      "key": {
        "uuid": "9a3d3df0_47b2874c",
        "filename": "config/installers/fuel/pod_config.yml.j2",
        "patchSetId": 2
      },
      "lineNbr": 38,
      "author": {
        "id": 6819
      },
      "writtenOn": "2018-02-05T09:21:44Z",
      "side": 1,
      "message": "I just realized about a possible, better implementation of the ipnet filters that we have not merged yet on pharos. A way to avoid passing the mask as variable when the network is taken from the \"pipe\". Using CIDR notation\n\nInstead of:\nset net_public_gw \u003d  net_public | ipnet_hostmin(net_public_mask)\n\nset net_public_gw \u003d  net_public_cidr | ipnet_hostmin()\n\nWith net_public_cidr \u003d idf IP + \"/\" + idf mask\n\nHow do you see this?",
      "range": {
        "startLine": 38,
        "startChar": 8,
        "endLine": 38,
        "endChar": 72
      },
      "revId": "d712d0f12dd3762abb91dbe46a129dcdce0c16ab",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a3d3df0_5bdee4dd",
        "filename": "config/installers/fuel/pod_config.yml.j2",
        "patchSetId": 2
      },
      "lineNbr": 61,
      "author": {
        "id": 2997
      },
      "writtenOn": "2018-02-02T16:32:05Z",
      "side": 1,
      "message": "this will definitely not work for /25\nI thing going forward we should allow (optional) parameterization of these fixed IPs via IDF",
      "range": {
        "startLine": 61,
        "startChar": 73,
        "endLine": 61,
        "endChar": 76
      },
      "revId": "d712d0f12dd3762abb91dbe46a129dcdce0c16ab",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a3d3df0_a77a7385",
        "filename": "config/installers/fuel/pod_config.yml.j2",
        "patchSetId": 2
      },
      "lineNbr": 61,
      "author": {
        "id": 6819
      },
      "writtenOn": "2018-02-05T08:54:42Z",
      "side": 1,
      "message": "True. On this first draft I wanted to share how the new code and logic will look like. I made the changes around public_net but we need to look into the rest of networks.\n\nRegarding your suggestion, to parametrize this we could relay on an specified range for the given networks and then assign from it. The only requirement should be that it has to be large enough to provide IPs for the N required assignments, small enough to fit on the associated network/prefix and to avoid the external wateway, in case of public_net. To make sure this is known by the users it could be either well documented, checked against schema or more likely, have a smart filter to check if range is inside a network and large enough, throwing an error otherwise",
      "parentUuid": "9a3d3df0_5bdee4dd",
      "range": {
        "startLine": 61,
        "startChar": 73,
        "endLine": 61,
        "endChar": 76
      },
      "revId": "d712d0f12dd3762abb91dbe46a129dcdce0c16ab",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    }
  ]
}