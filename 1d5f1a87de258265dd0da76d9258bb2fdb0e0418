{
  "comments": [
    {
      "key": {
        "uuid": "9a3d3df0_0b8d007c",
        "filename": "config/utils/README.eyaml.rst",
        "patchSetId": 10
      },
      "lineNbr": 15,
      "author": {
        "id": 483
      },
      "writtenOn": "2017-10-11T16:16:03Z",
      "side": 1,
      "message": "it only works for CentOS, can you add the installation steps for Ubuntu.",
      "range": {
        "startLine": 15,
        "startChar": 10,
        "endLine": 15,
        "endChar": 36
      },
      "revId": "1d5f1a87de258265dd0da76d9258bb2fdb0e0418",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a3d3df0_2bf1e4cd",
        "filename": "config/utils/README.eyaml.rst",
        "patchSetId": 10
      },
      "lineNbr": 24,
      "author": {
        "id": 483
      },
      "writtenOn": "2017-10-11T16:16:03Z",
      "side": 1,
      "message": "chmod +r /etc/eyaml_keys/*\n\nif current user can not read files esp private_key.pkcs7.pem in /etc/eyaml_keys/, the decrypt will fail.",
      "range": {
        "startLine": 24,
        "startChar": 8,
        "endLine": 24,
        "endChar": 43
      },
      "revId": "1d5f1a87de258265dd0da76d9258bb2fdb0e0418",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a3d3df0_bf87d80e",
        "filename": "config/utils/README.eyaml.rst",
        "patchSetId": 10
      },
      "lineNbr": 24,
      "author": {
        "id": 2997
      },
      "writtenOn": "2017-10-18T17:50:54Z",
      "side": 1,
      "message": "No need for that. `eyaml createkeys` is ran without sudo @L17, so the keys are owned by the current user.\nWhen `sudo mv` puts the keys in \u003c/etc/eyaml_keys\u003e, they retain their original owner/group permissions, so the current user will be able to access them just fine.",
      "parentUuid": "9a3d3df0_2bf1e4cd",
      "range": {
        "startLine": 24,
        "startChar": 8,
        "endLine": 24,
        "endChar": 43
      },
      "revId": "1d5f1a87de258265dd0da76d9258bb2fdb0e0418",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a3d3df0_a5ab6ad5",
        "filename": "config/utils/README.eyaml.rst",
        "patchSetId": 10
      },
      "lineNbr": 45,
      "author": {
        "id": 1451
      },
      "writtenOn": "2017-10-09T23:11:56Z",
      "side": 1,
      "message": "Does this encryption need to happen on the same server the secrets will be decrypted on? If so, should a note be added regarding moving the keys to the server, or specifying the encryption must happen on the server?",
      "range": {
        "startLine": 41,
        "startChar": 0,
        "endLine": 45,
        "endChar": 34
      },
      "revId": "1d5f1a87de258265dd0da76d9258bb2fdb0e0418",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a3d3df0_2eee1723",
        "filename": "config/utils/README.eyaml.rst",
        "patchSetId": 10
      },
      "lineNbr": 45,
      "author": {
        "id": 2997
      },
      "writtenOn": "2017-10-10T15:56:14Z",
      "side": 1,
      "message": "Very good point, the keys should be copied to the servers used for decryption too.\nAric, will you add that note (so you take the credit back while pushing a new revision), or should I add it?",
      "parentUuid": "9a3d3df0_a5ab6ad5",
      "range": {
        "startLine": 41,
        "startChar": 0,
        "endLine": 45,
        "endChar": 34
      },
      "revId": "1d5f1a87de258265dd0da76d9258bb2fdb0e0418",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a3d3df0_0beea0ec",
        "filename": "config/utils/README.eyaml.rst",
        "patchSetId": 10
      },
      "lineNbr": 62,
      "author": {
        "id": 483
      },
      "writtenOn": "2017-10-11T16:16:03Z",
      "side": 1,
      "message": "suggest to directly use eyaml for decryption\n\neyaml decrypt -f test.yaml",
      "range": {
        "startLine": 62,
        "startChar": 10,
        "endLine": 62,
        "endChar": 84
      },
      "revId": "1d5f1a87de258265dd0da76d9258bb2fdb0e0418",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a3d3df0_1f7c0420",
        "filename": "config/utils/README.eyaml.rst",
        "patchSetId": 10
      },
      "lineNbr": 62,
      "author": {
        "id": 2997
      },
      "writtenOn": "2017-10-18T17:50:54Z",
      "side": 1,
      "message": "-1 on this one, as that would require changing all consumers of `generate_config.py` to add an extra step.\nPlus, saving the decrypted file to disk is not recommended, security-wise.\nWe should check that the `generate_config.py` still works as expected (i.e. outputting raw data) when \u0027eyaml\u0027 is not installed. I did not test this case, but it should be easy to adapt the current implementation to do this (although I think the try/catch/pass construct we have now should already handle this case).",
      "parentUuid": "9a3d3df0_0beea0ec",
      "range": {
        "startLine": 62,
        "startChar": 10,
        "endLine": 62,
        "endChar": 84
      },
      "revId": "1d5f1a87de258265dd0da76d9258bb2fdb0e0418",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da33351e_ddc203e8",
        "filename": "config/utils/generate_config.py",
        "patchSetId": 10
      },
      "lineNbr": 58,
      "author": {
        "id": 2997
      },
      "writtenOn": "2017-10-05T23:56:04Z",
      "side": 1,
      "message": "I bet you did not notice this argument till now :)",
      "range": {
        "startLine": 58,
        "startChar": 61,
        "endLine": 58,
        "endChar": 63
      },
      "revId": "1d5f1a87de258265dd0da76d9258bb2fdb0e0418",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da33351e_c36b4283",
        "filename": "config/utils/generate_config.py",
        "patchSetId": 10
      },
      "lineNbr": 58,
      "author": {
        "id": 6
      },
      "writtenOn": "2017-10-06T15:04:27Z",
      "side": 1,
      "message": "nope :)",
      "parentUuid": "da33351e_ddc203e8",
      "range": {
        "startLine": 58,
        "startChar": 61,
        "endLine": 58,
        "endChar": 63
      },
      "revId": "1d5f1a87de258265dd0da76d9258bb2fdb0e0418",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a3d3df0_6bbacce2",
        "filename": "config/utils/generate_config.py",
        "patchSetId": 10
      },
      "lineNbr": 61,
      "author": {
        "id": 483
      },
      "writtenOn": "2017-10-11T16:16:03Z",
      "side": 1,
      "message": "when encrypt yaml can not be decrypt, DICT is not defined here.",
      "range": {
        "startLine": 61,
        "startChar": 7,
        "endLine": 61,
        "endChar": 11
      },
      "revId": "1d5f1a87de258265dd0da76d9258bb2fdb0e0418",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a3d3df0_7f8d5031",
        "filename": "config/utils/generate_config.py",
        "patchSetId": 10
      },
      "lineNbr": 61,
      "author": {
        "id": 2997
      },
      "writtenOn": "2017-10-18T17:50:54Z",
      "side": 1,
      "message": "When an encrypted yaml can\u0027t be decripted using the configured keys, `eyaml decrypt -f` will output the raw (encrypted) file.\nThe only case DICT is not defined is when keys are misconfigured, in which case eyaml stops and won\u0027t output anything. Hence the following block, which will output the still-encrypted yaml.",
      "parentUuid": "9a3d3df0_6bbacce2",
      "range": {
        "startLine": 61,
        "startChar": 7,
        "endLine": 61,
        "endChar": 11
      },
      "revId": "1d5f1a87de258265dd0da76d9258bb2fdb0e0418",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    }
  ]
}